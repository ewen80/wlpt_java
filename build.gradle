buildscript {
    repositories {
        //阿里云仓库
        maven { url 'https://maven.aliyun.com/repository/public/' }

        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
        //自动生成API文档
        classpath("com.github.shalousun:smart-doc-gradle-plugin:2.1.4")
    }
}

//plugins {
//    id 'application'
//}

// In this section you declare where to find the dependencies of your project
repositories {
    //阿里云仓库
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenCentral()
}

group = 'WLPT'
version = '0.1.0'


//sourceCompatibility = 1.8
//targetCompatibility = 1.8

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "com.github.shalousun.smart-doc"

springBoot  {
    mainClass = 'pw.ewen.WLPT.Application'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile (
//            "org.springframework.boot:spring-boot-devtools",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-cache",
            "org.springframework.security:spring-security-acl",
            "net.sf.ehcache:ehcache",
            "org.apache.commons:commons-lang3:3.5",
            "org.hibernate:hibernate-java8",
    )
    compile("org.hibernate:hibernate-ehcache"){
        exclude group: "net.sf.ehcache", module: "ehcache-core"
    }

    compile(
//            "mysql:mysql-connector-java:8.0.25"
            "mysql:mysql-connector-java:5.1.49",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6"
    )
    testImplementation (
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            files("libs/GroboTestingJUnit-1.2.1-core.jar"),
    )
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
}

